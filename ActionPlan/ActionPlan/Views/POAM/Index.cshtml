@model IEnumerable<ActionPlan.Models.PlanOfActionViewModels.POAMViewModel>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
<br />
<div class="col-sm-1">
    @*<button class="btn btn-success" asp-action="Create">Create New</button>*@
    <a asp-action="Create" class="btn btn-success">Create New</a>
</div>
<div class="col-sm-6 col-sm-offset-5">
    <form method="POST" action="#" enctype="multipart/form-data">
        <div class="form-group">
            <div class="input-group input-file" name="POAMActions">
                <span class="input-group-btn">
                    <button class="btn btn-default btn-choose" type="button">Choose</button>
                </span>
                <input type="file" name="fileupload" id="fileupload" class="input-ghost" style="visibility:hidden; height:0px;" />
                <input type="text" class="form-control" placeholder='Choose a file...' />
                <span class="input-group-btn">
                    <button class="btn btn-success" type="submit" asp-controller="Excel" asp-action="Import">Import</button>
                    @*<a asp-controller="Excel" asp-action="Import" class="btn btn-success">Import</a>*@
                </span>
                <span class="input-group-btn">
                    <button class="btn btn-warning btn-reset" type="button">Reset</button>
                </span>
            </div>
        </div>
    </form>
</div>


<table class="table small">
    <thead>
        <tr>
            @if (ViewContext.HttpContext.User.IsInRole("Administrator"))
            {
                <th>
                    @Html.DisplayNameFor(model => model.ID)
                </th>

            }
            <th>
                @Html.DisplayNameFor(model => model.AuthSystem)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CSAMPOAMID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ControlID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RiskLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DelayReason)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OriginalRecommendation)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Risk)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Recommendation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ResponsiblePOCs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ResourcesRequired)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CostJustification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScheduledCompletionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlannedStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlannedFinishDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualFinishDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (ViewContext.HttpContext.User.IsInRole("Administrator"))
                {

                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.AuthSystem)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSAMPOAMID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ControlID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RiskLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DelayReason)
                </td>
                <td>
                    <div>
                        @Html.DisplayFor(modelItem => item.OriginalRecommendation)
                        @if (item.IsOriginalRecommendationTruncated)
                        {
                            @Html.ActionLink("more", "Details", new { item.ID })
                        }
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.Risk)
                        @if (item.IsRiskTruncated)
                        {
                            @Html.ActionLink("more", "Details", new { item.ID })
                        }
                    </div>
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Risk)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Recommendation)
                    @if (item.IsRecommendationTruncated)
                    {
                        @Html.ActionLink("more", "Details", new { item.ID })
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ResponsiblePOCs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ResourcesRequired)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CostJustification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScheduledCompletionDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlannedStartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlannedFinishDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualStartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualFinishDate)
                </td>
                <td class="text-nowrap">
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { item.ID })
                    @if (ViewContext.HttpContext.User.IsInRole("Administrator"))
                    {
                        <span>|</span> @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
